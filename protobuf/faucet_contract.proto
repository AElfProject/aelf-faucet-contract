syntax = "proto3";

package Faucet;

import "aelf/core.proto";
import "aelf/options.proto";
import "google/protobuf/empty.proto";
import "google/protobuf/wrappers.proto";
import "google/protobuf/timestamp.proto";

option csharp_namespace = "AElf.Contracts.Faucet";

service FaucetContract {
    option (aelf.csharp_state) = "AElf.Contracts.Faucet.FaucetContractState";

    rpc Initialize (InitializeInput) returns (google.protobuf.Empty) {
    }

    // Faucet owner
    rpc NewFaucet (NewFaucetInput) returns (google.protobuf.Empty) {
    }
    rpc Pour (PourInput) returns (google.protobuf.Empty) {
    }
    rpc TurnOn (TurnInput) returns (google.protobuf.Empty) {
    }
    rpc TurnOff (TurnInput) returns (google.protobuf.Empty) {
    }
    rpc SetLimit (SetLimitInput) returns (google.protobuf.Empty) {
    }
    rpc Ban (BanInput) returns (google.protobuf.Empty) {
    }

    // Others.
    rpc Take (TakeInput) returns (google.protobuf.Empty) {
    }
    rpc Return (ReturnInput) returns (google.protobuf.Empty) {
    }

    rpc GetOwner (google.protobuf.StringValue) returns (aelf.Address) {
        option (aelf.is_view) = true;
    }
    rpc GetFaucetStatus (google.protobuf.StringValue) returns (FaucetStatus) {
        option (aelf.is_view) = true;
    }
}

message InitializeInput {
    aelf.Address admin = 1;
    int64 amount_limit = 2;
    int64 interval_minutes = 3;
}

message NewFaucetInput {
    string symbol = 1;
    int64 amount = 2;
    aelf.Address owner = 3;
    int64 amount_limit = 4;
    int64 interval_minutes = 5;
}

message PourInput {
    string symbol = 1;
    int64 amount = 2;
}

message TurnInput {
    string symbol = 1;
    google.protobuf.Timestamp at = 2;
}

message SetLimitInput {
    string symbol = 1;
    int64 amount_limit = 2;
    int64 interval_minutes = 3;
}

message BanInput {
    string symbol = 1;
    aelf.Address target = 2;
    bool is_ban = 3;
}

message TakeInput {
    string symbol = 1;
    int64 amount = 2;
}

message ReturnInput {
    string symbol = 1;
    int64 amount = 2;
}

message FaucetStatus {
    bool is_on = 1;
    google.protobuf.Timestamp turn_at = 2;
}

// Events

message FaucetCreated {
    option (aelf.is_event) = true;
    string symbol = 1;
    int64 amount = 2;
    aelf.Address owner = 3;
}

message Poured {
    option (aelf.is_event) = true;
    string symbol = 1;
    int64 amount = 2;
}

message FaucetTurned {
    option (aelf.is_event) = true;
    bool is_turned_on = 1;
    string symbol = 2;
}